/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package com.raven.form;

import com.raven.utils.Repo;
import java.sql.Connection;
import java.sql.PreparedStatement;
import java.sql.ResultSet;
import java.sql.SQLException;
import java.util.HashMap;
import java.util.Map;
import javax.swing.JOptionPane;
import javax.swing.JTextArea;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author ASUS
 */
public class Form_4 extends javax.swing.JPanel {

    private DefaultTableModel tableModel;

    /**
     * Creates new form Form_4
     */
    public Form_4() {
        initComponents();
        update_table();
        //txtmaSP.setEditable(false);
        connection = repo.getConnection();
    }
    private final Repo repo = Repo.getInstance();

    public void update_table() {
        tableModel = (DefaultTableModel) ViewDSSP.getModel();
        tableModel.setRowCount(0);

        String sql = "SELECT sp.maSP, sp.tenSP, sp.DVT, sp.dongia, csp.SLTon, csp.ngayNhap, csp.HSD, csp.mota,sp.maLSP FROM SanPham sp JOIN CTSanPham csp ON sp.maSP = csp.maSP; ";
        ResultSet rs = repo.executeQuery(sql);
        try {
            while (rs.next()) {
                // Lấy dữ liệu từ ResultSet và thêm vào tableModel
                Object[] row = {
                    rs.getString("maSP"),
                    rs.getString("tenSP"),
                    rs.getString("DVT"),
                    rs.getInt("dongia"),
                    rs.getInt("SLTon"),
                    rs.getString("ngayNhap"),
                    rs.getString("HSD"),
                    rs.getString("mota"),
                    rs.getString("maLSP")
                };
                tableModel.addRow(row);
            }
        } catch (Exception e) {
            e.printStackTrace();
        }
    }
    private Connection connection;
    private void updateTextField(String maLoaiSP) {
        try {
            PreparedStatement pstmt = connection.prepareStatement("SELECT tenLSP FROM loaisanpham WHERE maLSP = ?");
            pstmt.setString(1, maLoaiSP);
            ResultSet rs = pstmt.executeQuery();

            if (rs.next()) {
                txttenLSP.setText(rs.getString("tenLSP"));
            } else {
                txttenLSP.setText("");
            }
        } catch (SQLException e) {
            e.printStackTrace();
        }
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        jLabel15 = new javax.swing.JLabel();
        jPanel3 = new javax.swing.JPanel();
        jScrollPane1 = new javax.swing.JScrollPane();
        ViewDSSP = new javax.swing.JTable();
        jLabel4 = new javax.swing.JLabel();
        txtmaSP = new javax.swing.JTextField();
        jLabel5 = new javax.swing.JLabel();
        jLabel6 = new javax.swing.JLabel();
        txtTenSP = new javax.swing.JTextField();
        jLabel10 = new javax.swing.JLabel();
        Gia = new javax.swing.JTextField();
        jLabel11 = new javax.swing.JLabel();
        NgayNhap = new javax.swing.JTextField();
        jLabel12 = new javax.swing.JLabel();
        SLT = new javax.swing.JTextField();
        jLabel13 = new javax.swing.JLabel();
        HSD = new javax.swing.JTextField();
        jPanel2 = new javax.swing.JPanel();
        Danhmuc = new javax.swing.JComboBox<>();
        jLabel1 = new javax.swing.JLabel();
        Search = new javax.swing.JButton();
        Edit = new javax.swing.JButton();
        Delete = new javax.swing.JButton();
        ADD = new javax.swing.JButton();
        jButton5 = new javax.swing.JButton();
        txttenLSP = new javax.swing.JTextField();
        DVT = new javax.swing.JComboBox<>();
        jLabel16 = new javax.swing.JLabel();
        mota = new javax.swing.JTextField();

        jPanel1.setBackground(new java.awt.Color(255, 255, 255));

        jLabel15.setBackground(new java.awt.Color(255, 255, 255));
        jLabel15.setFont(new java.awt.Font("Times New Roman", 1, 22)); // NOI18N
        jLabel15.setForeground(new java.awt.Color(153, 51, 0));
        jLabel15.setText("DANH SÁCH SẢN PHẨM  ");

        jPanel3.setBackground(new java.awt.Color(255, 204, 153));

        ViewDSSP.setBackground(new java.awt.Color(255, 255, 255));
        ViewDSSP.setFont(new java.awt.Font("Times New Roman", 0, 14)); // NOI18N
        ViewDSSP.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Mã Sp", "Tên SP", "DVT", "Đơn giá", "SL Tồn ", "Ngày nhập ", "HSD", "Mô tả", "Mã LSP"
            }
        ));
        ViewDSSP.setRowHeight(30);
        ViewDSSP.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                ViewDSSPMouseClicked(evt);
            }
        });
        jScrollPane1.setViewportView(ViewDSSP);

        javax.swing.GroupLayout jPanel3Layout = new javax.swing.GroupLayout(jPanel3);
        jPanel3.setLayout(jPanel3Layout);
        jPanel3Layout.setHorizontalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 635, Short.MAX_VALUE)
        );
        jPanel3Layout.setVerticalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel3Layout.createSequentialGroup()
                .addGap(0, 0, Short.MAX_VALUE)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 299, javax.swing.GroupLayout.PREFERRED_SIZE))
        );

        jLabel4.setFont(new java.awt.Font("Times New Roman", 0, 18)); // NOI18N
        jLabel4.setForeground(new java.awt.Color(0, 0, 0));
        jLabel4.setText("Mã sản phẩm ");

        txtmaSP.setBackground(new java.awt.Color(255, 255, 255));
        txtmaSP.setFont(new java.awt.Font("Times New Roman", 0, 18)); // NOI18N
        txtmaSP.setForeground(new java.awt.Color(0, 0, 0));
        txtmaSP.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtmaSPActionPerformed(evt);
            }
        });

        jLabel5.setFont(new java.awt.Font("Times New Roman", 0, 18)); // NOI18N
        jLabel5.setForeground(new java.awt.Color(0, 0, 0));
        jLabel5.setText("Đơn vị tính ");

        jLabel6.setFont(new java.awt.Font("Times New Roman", 0, 18)); // NOI18N
        jLabel6.setForeground(new java.awt.Color(0, 0, 0));
        jLabel6.setText("Tên sản phẩm ");

        txtTenSP.setBackground(new java.awt.Color(255, 255, 255));
        txtTenSP.setFont(new java.awt.Font("Times New Roman", 0, 18)); // NOI18N
        txtTenSP.setForeground(new java.awt.Color(0, 0, 0));

        jLabel10.setFont(new java.awt.Font("Times New Roman", 0, 18)); // NOI18N
        jLabel10.setForeground(new java.awt.Color(0, 0, 0));
        jLabel10.setText("Giá");

        Gia.setBackground(new java.awt.Color(255, 255, 255));
        Gia.setFont(new java.awt.Font("Times New Roman", 0, 18)); // NOI18N
        Gia.setForeground(new java.awt.Color(0, 0, 0));

        jLabel11.setFont(new java.awt.Font("Times New Roman", 0, 18)); // NOI18N
        jLabel11.setForeground(new java.awt.Color(0, 0, 0));
        jLabel11.setText("Ngày nhập");

        NgayNhap.setBackground(new java.awt.Color(255, 255, 255));
        NgayNhap.setFont(new java.awt.Font("Times New Roman", 0, 18)); // NOI18N
        NgayNhap.setForeground(new java.awt.Color(0, 0, 0));
        NgayNhap.setText("0000-00-00");

        jLabel12.setFont(new java.awt.Font("Times New Roman", 0, 18)); // NOI18N
        jLabel12.setForeground(new java.awt.Color(0, 0, 0));
        jLabel12.setText("Số lượng tồn ");

        SLT.setBackground(new java.awt.Color(255, 255, 255));
        SLT.setFont(new java.awt.Font("Times New Roman", 0, 18)); // NOI18N
        SLT.setForeground(new java.awt.Color(0, 0, 0));

        jLabel13.setFont(new java.awt.Font("Times New Roman", 0, 18)); // NOI18N
        jLabel13.setForeground(new java.awt.Color(0, 0, 0));
        jLabel13.setText("Hạn sử dụng");

        HSD.setBackground(new java.awt.Color(255, 255, 255));
        HSD.setFont(new java.awt.Font("Times New Roman", 0, 18)); // NOI18N
        HSD.setForeground(new java.awt.Color(0, 0, 0));

        jPanel2.setBackground(new java.awt.Color(255, 204, 153));

        Danhmuc.setBackground(new java.awt.Color(255, 255, 255));
        Danhmuc.setEditable(true);
        Danhmuc.setFont(new java.awt.Font("Times New Roman", 0, 18)); // NOI18N
        Danhmuc.setForeground(new java.awt.Color(0, 0, 0));
        Danhmuc.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "LSP001", "LSP002", "LSP003", "LSP004", "LSP005", " " }));
        Danhmuc.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                DanhmucActionPerformed(evt);
            }
        });

        jLabel1.setFont(new java.awt.Font("Times New Roman", 2, 18)); // NOI18N
        jLabel1.setForeground(new java.awt.Color(0, 0, 0));
        jLabel1.setText("Danh mục sản phẩm ");

        Search.setBackground(new java.awt.Color(255, 255, 255));
        Search.setFont(new java.awt.Font("Times New Roman", 0, 18)); // NOI18N
        Search.setForeground(new java.awt.Color(0, 0, 0));
        Search.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Image/icons8-search-48.png"))); // NOI18N
        Search.setText("Tìm kiếm ");
        Search.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                SearchActionPerformed(evt);
            }
        });

        Edit.setBackground(new java.awt.Color(255, 255, 255));
        Edit.setFont(new java.awt.Font("Times New Roman", 0, 18)); // NOI18N
        Edit.setForeground(new java.awt.Color(0, 0, 0));
        Edit.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Image/icons8-edit.gif"))); // NOI18N
        Edit.setText("Sửa thông tin ");
        Edit.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                EditActionPerformed(evt);
            }
        });

        Delete.setBackground(new java.awt.Color(255, 255, 255));
        Delete.setFont(new java.awt.Font("Times New Roman", 0, 18)); // NOI18N
        Delete.setForeground(new java.awt.Color(0, 0, 0));
        Delete.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Image/icons8-delete-48 (1).png"))); // NOI18N
        Delete.setText("Xóa sản phẩm ");
        Delete.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                DeleteActionPerformed(evt);
            }
        });

        ADD.setBackground(new java.awt.Color(255, 255, 255));
        ADD.setFont(new java.awt.Font("Times New Roman", 0, 18)); // NOI18N
        ADD.setForeground(new java.awt.Color(0, 0, 0));
        ADD.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Image/icons8-add-48.png"))); // NOI18N
        ADD.setText(" Thêm sản phẩm ");
        ADD.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                ADDActionPerformed(evt);
            }
        });

        jButton5.setBackground(new java.awt.Color(255, 255, 255));
        jButton5.setFont(new java.awt.Font("Times New Roman", 0, 18)); // NOI18N
        jButton5.setForeground(new java.awt.Color(0, 0, 0));
        jButton5.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Image/icons8-clean-80.png"))); // NOI18N
        jButton5.setText("Clean");
        jButton5.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton5ActionPerformed(evt);
            }
        });

        txttenLSP.setBackground(new java.awt.Color(255, 255, 255));
        txttenLSP.setFont(new java.awt.Font("Times New Roman", 0, 18)); // NOI18N
        txttenLSP.setForeground(new java.awt.Color(0, 0, 0));

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel2Layout.createSequentialGroup()
                .addContainerGap(29, Short.MAX_VALUE)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(ADD)
                    .addComponent(jLabel1)
                    .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                        .addComponent(Danhmuc, javax.swing.GroupLayout.Alignment.LEADING, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(Search, javax.swing.GroupLayout.DEFAULT_SIZE, 212, Short.MAX_VALUE)
                        .addComponent(txttenLSP, javax.swing.GroupLayout.Alignment.LEADING))
                    .addComponent(jButton5, javax.swing.GroupLayout.PREFERRED_SIZE, 210, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(Edit, javax.swing.GroupLayout.PREFERRED_SIZE, 211, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(Delete, javax.swing.GroupLayout.PREFERRED_SIZE, 211, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(28, 28, 28))
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(ADD)
                .addGap(18, 18, 18)
                .addComponent(Delete)
                .addGap(18, 18, 18)
                .addComponent(Edit)
                .addGap(18, 18, 18)
                .addComponent(jButton5, javax.swing.GroupLayout.PREFERRED_SIZE, 50, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(jLabel1)
                .addGap(18, 18, 18)
                .addComponent(Danhmuc, javax.swing.GroupLayout.PREFERRED_SIZE, 39, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(txttenLSP, javax.swing.GroupLayout.PREFERRED_SIZE, 38, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(Search)
                .addGap(37, 37, 37))
        );

        DVT.setBackground(new java.awt.Color(255, 255, 255));
        DVT.setEditable(true);
        DVT.setFont(new java.awt.Font("Times New Roman", 0, 18)); // NOI18N
        DVT.setForeground(new java.awt.Color(0, 0, 0));
        DVT.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Cái ", "Quyển ", "Tập", "Chai", " " }));

        jLabel16.setFont(new java.awt.Font("Times New Roman", 0, 18)); // NOI18N
        jLabel16.setForeground(new java.awt.Color(0, 0, 0));
        jLabel16.setText("Mô tả");

        mota.setBackground(new java.awt.Color(255, 255, 255));
        mota.setFont(new java.awt.Font("Times New Roman", 0, 18)); // NOI18N
        mota.setForeground(new java.awt.Color(0, 0, 0));

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(323, 323, 323)
                .addComponent(jLabel15)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(18, 18, 18)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel11)
                            .addComponent(jLabel6)
                            .addComponent(jLabel13)
                            .addComponent(jLabel4))
                        .addGap(18, 18, 18)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                    .addComponent(txtTenSP, javax.swing.GroupLayout.DEFAULT_SIZE, 213, Short.MAX_VALUE)
                                    .addComponent(txtmaSP)
                                    .addComponent(NgayNhap))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addGroup(jPanel1Layout.createSequentialGroup()
                                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                            .addComponent(jLabel10)
                                            .addComponent(jLabel12))
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                            .addComponent(Gia, javax.swing.GroupLayout.DEFAULT_SIZE, 138, Short.MAX_VALUE)
                                            .addComponent(SLT)))
                                    .addGroup(jPanel1Layout.createSequentialGroup()
                                        .addComponent(jLabel5)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                        .addComponent(DVT, javax.swing.GroupLayout.PREFERRED_SIZE, 143, javax.swing.GroupLayout.PREFERRED_SIZE))))
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addComponent(HSD, javax.swing.GroupLayout.PREFERRED_SIZE, 213, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(0, 0, Short.MAX_VALUE)))
                        .addGap(47, 47, 47))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(jPanel3, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addComponent(jLabel16)
                                .addGap(86, 86, 86)
                                .addComponent(mota)))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
                .addComponent(jPanel2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(29, 29, 29))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel15)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(6, 6, 6)
                        .addComponent(jPanel3, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(36, 36, 36)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel4)
                            .addComponent(txtmaSP, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel5)
                            .addComponent(DVT, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel6)
                            .addComponent(txtTenSP, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(Gia, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel10))
                        .addGap(18, 18, 18)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                .addComponent(NgayNhap, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addComponent(SLT, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addComponent(jLabel12))
                            .addComponent(jLabel11))
                        .addGap(18, 18, 18)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel13)
                            .addComponent(HSD, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(18, 18, 18)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel16)
                            .addComponent(mota, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addComponent(jPanel2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(12, 12, 12)
                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, 918, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addContainerGap())
        );
    }// </editor-fold>//GEN-END:initComponents

    private void DeleteActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_DeleteActionPerformed
        // TODO add your handling code here:
        String maSP = txtmaSP.getText();
        int xacNhan = JOptionPane.showConfirmDialog(null, "Bạn có chắc chắn muốn xóa sản phẩm?", "Xác nhận Xóa", JOptionPane.YES_NO_OPTION);

        if (xacNhan == JOptionPane.YES_OPTION) {
            try {
                String deleteQuery = "DELETE FROM CTSanPham WHERE maSP = ?";
                PreparedStatement deleteStmt = repo.getConnection().prepareStatement(deleteQuery);
                deleteStmt.setString(1, maSP);

                int rowsAffected1 = deleteStmt.executeUpdate();

                if (rowsAffected1 > 0) {
                    // Xóa sản phẩm khỏi bảng SanPham
                    String deleteMainQuery = "DELETE FROM SanPham WHERE maSP = ?";
                    PreparedStatement deleteMainStmt = repo.getConnection().prepareStatement(deleteMainQuery);
                    deleteMainStmt.setString(1, maSP);

                    int rowsAffected2 = deleteMainStmt.executeUpdate();

                    if (rowsAffected2 > 0) {
                        // Cập nhật lại dữ liệu trong tableModel
                        update_table();
                        JOptionPane.showMessageDialog(null, "Đã xóa sản phẩm thành công!");
                    }
                }
            } catch (SQLException e) {
                JOptionPane.showMessageDialog(null, "Lỗi khi xóa sản phẩm: " + e.getMessage());
                e.printStackTrace();
            }
        }
        txtmaSP.setText("");
        txtTenSP.setText("");
        DVT.setSelectedItem("");
        Gia.setText("");
        SLT.setText("");
        NgayNhap.setText("");
        HSD.setText("");
        mota.setText("");
        txttenLSP.setText("");
        Danhmuc.setSelectedItem("");
        update_table();
    }//GEN-LAST:event_DeleteActionPerformed

    private void ADDActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_ADDActionPerformed
        // Lấy dữ liệu từ các text field
        String maSP = txtmaSP.getText();
        String tenSP = txtTenSP.getText();
        String donviTinh = (String) DVT.getSelectedItem();
        int gia = Integer.parseInt(Gia.getText());
        int soluong = Integer.parseInt(SLT.getText());
        String ngayNhap = NgayNhap.getText();
        String hanSuDung = null;
        if (!HSD.getText().isEmpty()) {
            hanSuDung = HSD.getText();
        }
        String moTa = mota.getText();
        String danhMuc = (String) Danhmuc.getSelectedItem();

        // Xác nhận với người dùng
        int xacNhan = JOptionPane.showConfirmDialog(null, "Bạn có chắc chắn muốn thêm sản phẩm?", "Xác nhận Thêm", JOptionPane.YES_NO_OPTION);

        if (xacNhan == JOptionPane.YES_OPTION) {
            try {
                // Thực hiện câu truy vấn SQL để thêm sản phẩm
                String query = "INSERT INTO SanPham (maSP, maLSP, tenSP, DVT, dongia) "
                        + "VALUES (?, ?, ?, ?, ?)";
                PreparedStatement stmt = repo.getConnection().prepareStatement(query);
                stmt.setString(1, maSP);
                stmt.setString(2, danhMuc);
                stmt.setString(3, tenSP);
                stmt.setString(4, donviTinh);
                stmt.setInt(5, gia);

                int rowsAffected1 = stmt.executeUpdate();

                if (rowsAffected1 > 0) {
                    // Thêm thông tin vào bảng CTSanPham
                    String ctQuery = "INSERT INTO CTSanPham (maSP, SLTon, ngayNhap, HSD, mota) "
                            + "VALUES (?, ?, ?, ?, ?)";
                    PreparedStatement ctStmt = repo.getConnection().prepareStatement(ctQuery);
                    ctStmt.setString(1, maSP);
                    ctStmt.setInt(2, soluong);
                    ctStmt.setString(3, ngayNhap);
                    ctStmt.setString(4, hanSuDung);
                    ctStmt.setString(5, moTa);

                    int rowsAffected2 = ctStmt.executeUpdate();

                    if (rowsAffected2 > 0) {
                        // Cập nhật lại dữ liệu trong tableModel
                        update_table();
                        JOptionPane.showMessageDialog(null, "Đã thêm sản phẩm thành công!");
                    }
                }
            } catch (SQLException e) {
                JOptionPane.showMessageDialog(null, "Lỗi khi thêm sản phẩm: " + e.getMessage());
                e.printStackTrace();
            }
        }
    }//GEN-LAST:event_ADDActionPerformed

    private void EditActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_EditActionPerformed
        // TODO add your handling code here:
        txtmaSP.setEditable(false);
        // Lấy dữ liệu từ các text field
        String maSP = txtmaSP.getText();
        String tenSP = txtTenSP.getText();
        String donviTinh = (String) DVT.getSelectedItem();
        int gia = Integer.parseInt(Gia.getText());
        int soluong = Integer.parseInt(SLT.getText());
        String ngayNhap = NgayNhap.getText();
        String hanSuDung = HSD.getText();
        String moTa = mota.getText();
        String danhMuc = (String) Danhmuc.getSelectedItem();

        // Xác nhận với người dùng
        int xacNhan = JOptionPane.showConfirmDialog(null, "Bạn có chắc chắn muốn sửa thông tin sản phẩm?", "Xác nhận Sửa", JOptionPane.YES_NO_OPTION);

        if (xacNhan == JOptionPane.YES_OPTION) {
            try {
                // Thực hiện câu truy vấn SQL để sửa thông tin sản phẩm
                String query = "UPDATE SanPham SET maLSP = ?, tenSP = ?, DVT = ?, dongia = ? WHERE maSP = ?";
                PreparedStatement stmt = repo.getConnection().prepareStatement(query);
                stmt.setString(1, danhMuc);
                stmt.setString(2, tenSP);
                stmt.setString(3, donviTinh);
                stmt.setInt(4, gia);
                stmt.setString(5, maSP);

                int rowsAffected1 = stmt.executeUpdate();

                if (rowsAffected1 > 0) {
                    // Sửa thông tin trong bảng CTSanPham
                    String ctQuery = "UPDATE CTSanPham SET SLTon = ?, ngayNhap = ?, HSD = ?, mota = ? WHERE maSP = ?";
                    PreparedStatement ctStmt = repo.getConnection().prepareStatement(ctQuery);
                    ctStmt.setInt(1, soluong);
                    ctStmt.setString(2, ngayNhap);
                    ctStmt.setString(3, hanSuDung);
                    ctStmt.setString(4, moTa);
                    ctStmt.setString(5, maSP);

                    int rowsAffected2 = ctStmt.executeUpdate();

                    if (rowsAffected2 > 0) {
                        // Cập nhật lại dữ liệu trong tableModel
                        update_table();
                        JOptionPane.showMessageDialog(null, "Đã sửa thông tin sản phẩm thành công!");
                    }
                }
            } catch (SQLException e) {
                JOptionPane.showMessageDialog(null, "Lỗi khi sửa thông tin sản phẩm: " + e.getMessage());
                e.printStackTrace();
            }
        }
    }//GEN-LAST:event_EditActionPerformed

    private void ViewDSSPMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_ViewDSSPMouseClicked
        // TODO add your handling code here:
        DefaultTableModel Df = (DefaultTableModel) ViewDSSP.getModel();
        int selectedIndex = ViewDSSP.getSelectedRow();
        txtmaSP.setText(Df.getValueAt(selectedIndex, 0).toString());
        txtTenSP.setText(Df.getValueAt(selectedIndex, 1).toString());
        DVT.setSelectedItem(Df.getValueAt(selectedIndex, 2).toString());
        Gia.setText(Df.getValueAt(selectedIndex, 3).toString());
        SLT.setText(Df.getValueAt(selectedIndex, 4).toString());
        NgayNhap.setText(Df.getValueAt(selectedIndex, 5).toString());
        HSD.setText(Df.getValueAt(selectedIndex, 6).toString());
        mota.setText(Df.getValueAt(selectedIndex, 7).toString());
        Danhmuc.setSelectedItem(Df.getValueAt(selectedIndex, 8).toString());

        String selectedMaLSP = Danhmuc.getSelectedItem().toString();
        String sql = "SELECT l.tenLSP FROM LoaiSanPham l WHERE l.maLSP = '" + selectedMaLSP + "' ";
        ResultSet rs = repo.executeQuery(sql);

        try {
            if (rs != null && rs.next()) {
                String tenLSP = rs.getString("tenLSP");
                txttenLSP.setText(tenLSP);
            } else {
                txttenLSP.setText("");
            }
        } catch (SQLException e) {
            e.printStackTrace();
        }


    }//GEN-LAST:event_ViewDSSPMouseClicked

    private void DanhmucActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_DanhmucActionPerformed
        String selectedValue = (String) Danhmuc.getSelectedItem();
        if (selectedValue != null) {
            updateTextField(selectedValue);
        }
    }//GEN-LAST:event_DanhmucActionPerformed

    private void jButton5ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton5ActionPerformed
        // TODO add your handling code here:
        txtmaSP.setText("");
        txtTenSP.setText("");
        DVT.setSelectedItem("");
        Gia.setText("");
        SLT.setText("");
        NgayNhap.setText("");
        HSD.setText("");
        mota.setText("");
        txttenLSP.setText("");
        Danhmuc.setSelectedItem("");
        update_table();
    }//GEN-LAST:event_jButton5ActionPerformed

    private void SearchActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_SearchActionPerformed
        // TODO add your handling code here:
        // Lấy dữ liệu từ các text field và combobox
        String tenSP = txtTenSP.getText();
        String maLSP = (String) Danhmuc.getSelectedItem();

        try {
            // Thực hiện câu truy vấn SQL để tìm kiếm sản phẩm
            String searchQuery = "SELECT SanPham.maSP, SanPham.tenSP, SanPham.DVT, SanPham.dongia, "
                    + "CTSanPham.SLTon, CTSanPham.ngayNhap, CTSanPham.HSD, CTSanPham.mota "
                    + "FROM SanPham "
                    + "INNER JOIN CTSanPham ON SanPham.maSP = CTSanPham.maSP "
                    + "WHERE SanPham.tenSP LIKE ? AND SanPham.maLSP LIKE ?";
            PreparedStatement searchStmt = repo.getConnection().prepareStatement(searchQuery);
            searchStmt.setString(1, "%" + tenSP + "%");
            searchStmt.setString(2, "%" + maLSP + "%");

            ResultSet rs = searchStmt.executeQuery();

            // Xóa dữ liệu cũ khỏi tableModel
            ((DefaultTableModel) ViewDSSP.getModel()).setRowCount(0);

            // Thêm dữ liệu tìm được vào tableModel
            while (rs.next()) {
                String maSP = rs.getString("maSP");
                String tenSanPham = rs.getString("tenSP");
                String donViTinh = rs.getString("DVT");
                int giaSanPham = rs.getInt("dongia");
                int soLuongTon = rs.getInt("SLTon");
                String ngayNhap = rs.getString("ngayNhap");
                String hanSuDung = rs.getString("HSD");
                String moTa = rs.getString("mota");

                Object[] rowData = {maSP, tenSanPham, donViTinh, giaSanPham, soLuongTon, ngayNhap, hanSuDung, moTa};
                ((DefaultTableModel) ViewDSSP.getModel()).addRow(rowData);
            }
        } catch (SQLException e) {
            JOptionPane.showMessageDialog(null, "Lỗi khi tìm kiếm sản phẩm: " + e.getMessage());
            e.printStackTrace();
        }
    }//GEN-LAST:event_SearchActionPerformed

    private void txtmaSPActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtmaSPActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtmaSPActionPerformed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton ADD;
    private javax.swing.JComboBox<String> DVT;
    private javax.swing.JComboBox<String> Danhmuc;
    private javax.swing.JButton Delete;
    private javax.swing.JButton Edit;
    private javax.swing.JTextField Gia;
    private javax.swing.JTextField HSD;
    private javax.swing.JTextField NgayNhap;
    private javax.swing.JTextField SLT;
    private javax.swing.JButton Search;
    private javax.swing.JTable ViewDSSP;
    private javax.swing.JButton jButton5;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel10;
    private javax.swing.JLabel jLabel11;
    private javax.swing.JLabel jLabel12;
    private javax.swing.JLabel jLabel13;
    private javax.swing.JLabel jLabel15;
    private javax.swing.JLabel jLabel16;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JPanel jPanel3;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTextField mota;
    private javax.swing.JTextField txtTenSP;
    private javax.swing.JTextField txtmaSP;
    private javax.swing.JTextField txttenLSP;
    // End of variables declaration//GEN-END:variables
}
