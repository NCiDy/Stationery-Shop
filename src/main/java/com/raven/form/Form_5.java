/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package com.raven.form;

import com.raven.utils.Repo;
import java.awt.event.KeyEvent;
import java.sql.PreparedStatement;
import java.sql.ResultSet;
import java.sql.SQLException;
import java.util.regex.Matcher;
import java.util.regex.Pattern;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author ASUS
 */
public class Form_5 extends javax.swing.JPanel {

    private DefaultTableModel tableModel;
    private final Repo repo = Repo.getInstance();

    /**
     * Creates new form Form_5
     */
    public Form_5() {
        initComponents();
        update_table();
        raQL.setSelected(false);
        raBH.setSelected(false);
        raTT.setSelected(false);
    }

    private boolean isValidEmail(String email) {
        // Biểu thức chính quy để kiểm tra định dạng email
        String regex = "^[a-zA-Z0-9_+&*-]+(?:\\.[a-zA-Z0-9_+&*-]+)*@(?:gmail)\\.(?:com)$";

        // Tạo mẫu từ biểu thức chính quy
        Pattern pattern = Pattern.compile(regex);

        // So khớp email với mẫu
        Matcher matcher = pattern.matcher(email);

        // Trả về true nếu email khớp với mẫu, ngược lại trả về false
        return matcher.matches();
    }

    public void update_table() {
        tableModel = (DefaultTableModel) ViewNV.getModel();
        tableModel.setRowCount(0);

        String sql = "SELECT NhanVien.*, TaiKhoanNV.passNV\n"
                + "FROM NhanVien\n"
                + "JOIN TaiKhoanNV ON NhanVien.maNV = TaiKhoanNV.maNV";
        ResultSet rs = repo.executeQuery(sql);
        try {
            while (rs.next()) {
                // Lấy dữ liệu từ ResultSet và thêm vào tableModel
                Object[] row = {
                    rs.getString("maNV"),
                    rs.getString("tenNV"),
                    rs.getString("ngaySinh"),
                    rs.getString("SDT"),
                    rs.getString("diachi"),
                    rs.getString("email"),
                    rs.getString("ngayVL"),
                    rs.getString("ChucVu"),
                    rs.getString("passNV")
                };
                tableModel.addRow(row);
            }
        } catch (Exception e) {
            e.printStackTrace();
        }
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel15 = new javax.swing.JLabel();
        jPanel3 = new javax.swing.JPanel();
        jScrollPane1 = new javax.swing.JScrollPane();
        ViewNV = new javax.swing.JTable();
        jPanel4 = new javax.swing.JPanel();
        raQL = new javax.swing.JRadioButton();
        raTT = new javax.swing.JRadioButton();
        raBH = new javax.swing.JRadioButton();
        jButton1 = new javax.swing.JButton();
        jButton2 = new javax.swing.JButton();
        jButton3 = new javax.swing.JButton();
        jButton4 = new javax.swing.JButton();
        jButton5 = new javax.swing.JButton();
        jLabel4 = new javax.swing.JLabel();
        txtMNV = new javax.swing.JTextField();
        jLabel5 = new javax.swing.JLabel();
        txtNVL = new javax.swing.JTextField();
        jLabel6 = new javax.swing.JLabel();
        txtNV = new javax.swing.JTextField();
        jLabel10 = new javax.swing.JLabel();
        txtNS = new javax.swing.JTextField();
        jLabel11 = new javax.swing.JLabel();
        txtEM = new javax.swing.JTextField();
        jLabel12 = new javax.swing.JLabel();
        txtSDT = new javax.swing.JTextField();
        jLabel13 = new javax.swing.JLabel();
        txtDC = new javax.swing.JTextField();
        jLabel14 = new javax.swing.JLabel();
        txtMK = new javax.swing.JTextField();

        setBackground(new java.awt.Color(255, 255, 255));

        jLabel15.setBackground(new java.awt.Color(255, 255, 255));
        jLabel15.setFont(new java.awt.Font("Segoe UI", 1, 22)); // NOI18N
        jLabel15.setForeground(new java.awt.Color(153, 51, 0));
        jLabel15.setText("DANH SÁCH NHÂN VIÊN  ");

        jPanel3.setBackground(new java.awt.Color(255, 204, 153));

        ViewNV.setBackground(new java.awt.Color(255, 255, 255));
        ViewNV.setFont(new java.awt.Font("Times New Roman", 0, 15)); // NOI18N
        ViewNV.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null}
            },
            new String [] {
                "Mã nhân viên ", "Tên nhân viên ", "Ngày sinh ", "Số điện thoại", "Địa chỉ ", "Email", "Ngày vào làm ", "Chức vụ ", "Mật khẩu "
            }
        ));
        ViewNV.setRowHeight(30);
        ViewNV.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                ViewNVMouseClicked(evt);
            }
        });
        jScrollPane1.setViewportView(ViewNV);

        javax.swing.GroupLayout jPanel3Layout = new javax.swing.GroupLayout(jPanel3);
        jPanel3.setLayout(jPanel3Layout);
        jPanel3Layout.setHorizontalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 635, Short.MAX_VALUE)
        );
        jPanel3Layout.setVerticalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jScrollPane1, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 338, javax.swing.GroupLayout.PREFERRED_SIZE)
        );

        jPanel4.setBackground(new java.awt.Color(255, 255, 255));
        jPanel4.setBorder(javax.swing.BorderFactory.createTitledBorder(null, "Chức vụ", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Times New Roman", 0, 18), new java.awt.Color(204, 51, 0))); // NOI18N

        raQL.setFont(new java.awt.Font("Times New Roman", 0, 18)); // NOI18N
        raQL.setForeground(new java.awt.Color(0, 0, 0));
        raQL.setText("Quản lí ");

        raTT.setFont(new java.awt.Font("Times New Roman", 0, 18)); // NOI18N
        raTT.setForeground(new java.awt.Color(0, 0, 0));
        raTT.setText("NV trực tuyến");

        raBH.setFont(new java.awt.Font("Times New Roman", 0, 18)); // NOI18N
        raBH.setForeground(new java.awt.Color(0, 0, 0));
        raBH.setText("NV bán hàng");
        raBH.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                raBHActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel4Layout = new javax.swing.GroupLayout(jPanel4);
        jPanel4.setLayout(jPanel4Layout);
        jPanel4Layout.setHorizontalGroup(
            jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel4Layout.createSequentialGroup()
                .addGap(19, 19, 19)
                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(raQL, javax.swing.GroupLayout.PREFERRED_SIZE, 110, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(raTT, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(raBH, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        jPanel4Layout.setVerticalGroup(
            jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel4Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(raQL)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(raBH)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 7, Short.MAX_VALUE)
                .addComponent(raTT)
                .addContainerGap())
        );

        jButton1.setBackground(new java.awt.Color(255, 255, 255));
        jButton1.setFont(new java.awt.Font("Times New Roman", 0, 18)); // NOI18N
        jButton1.setForeground(new java.awt.Color(0, 0, 0));
        jButton1.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Image/icons8-edit-64.png"))); // NOI18N
        jButton1.setText("Sửa thông tin ");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });

        jButton2.setBackground(new java.awt.Color(255, 255, 255));
        jButton2.setFont(new java.awt.Font("Times New Roman", 0, 18)); // NOI18N
        jButton2.setForeground(new java.awt.Color(0, 0, 0));
        jButton2.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Image/icons8-search-48.png"))); // NOI18N
        jButton2.setText("Tìm kiếm ");
        jButton2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton2ActionPerformed(evt);
            }
        });

        jButton3.setBackground(new java.awt.Color(255, 255, 255));
        jButton3.setFont(new java.awt.Font("Times New Roman", 0, 18)); // NOI18N
        jButton3.setForeground(new java.awt.Color(0, 0, 0));
        jButton3.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Image/icons8-delete-48 (1).png"))); // NOI18N
        jButton3.setText("Xóa nhân viên");
        jButton3.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton3ActionPerformed(evt);
            }
        });

        jButton4.setBackground(new java.awt.Color(255, 255, 255));
        jButton4.setFont(new java.awt.Font("Times New Roman", 0, 18)); // NOI18N
        jButton4.setForeground(new java.awt.Color(0, 0, 0));
        jButton4.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Image/icons8-add-48.png"))); // NOI18N
        jButton4.setText("Thêm nhân viên");
        jButton4.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton4ActionPerformed(evt);
            }
        });

        jButton5.setBackground(new java.awt.Color(255, 255, 255));
        jButton5.setFont(new java.awt.Font("Times New Roman", 0, 18)); // NOI18N
        jButton5.setForeground(new java.awt.Color(0, 0, 0));
        jButton5.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Image/icons8-clean-80.png"))); // NOI18N
        jButton5.setText("Hủy");
        jButton5.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton5ActionPerformed(evt);
            }
        });

        jLabel4.setFont(new java.awt.Font("Times New Roman", 0, 18)); // NOI18N
        jLabel4.setForeground(new java.awt.Color(0, 0, 0));
        jLabel4.setText("Mã nhân viên ");

        txtMNV.setBackground(new java.awt.Color(255, 255, 255));
        txtMNV.setFont(new java.awt.Font("Times New Roman", 0, 18)); // NOI18N
        txtMNV.setForeground(new java.awt.Color(0, 0, 0));

        jLabel5.setFont(new java.awt.Font("Times New Roman", 0, 18)); // NOI18N
        jLabel5.setForeground(new java.awt.Color(0, 0, 0));
        jLabel5.setText("Ngày vào làm");

        txtNVL.setBackground(new java.awt.Color(255, 255, 255));
        txtNVL.setFont(new java.awt.Font("Times New Roman", 0, 18)); // NOI18N
        txtNVL.setForeground(new java.awt.Color(0, 0, 0));
        txtNVL.setText("0000-00-00");

        jLabel6.setFont(new java.awt.Font("Times New Roman", 0, 18)); // NOI18N
        jLabel6.setForeground(new java.awt.Color(0, 0, 0));
        jLabel6.setText("Tên nhân viên ");

        txtNV.setBackground(new java.awt.Color(255, 255, 255));
        txtNV.setFont(new java.awt.Font("Times New Roman", 0, 18)); // NOI18N
        txtNV.setForeground(new java.awt.Color(0, 0, 0));

        jLabel10.setFont(new java.awt.Font("Times New Roman", 0, 18)); // NOI18N
        jLabel10.setForeground(new java.awt.Color(0, 0, 0));
        jLabel10.setText("Ngày sinh");

        txtNS.setBackground(new java.awt.Color(255, 255, 255));
        txtNS.setFont(new java.awt.Font("Times New Roman", 0, 18)); // NOI18N
        txtNS.setForeground(new java.awt.Color(0, 0, 0));
        txtNS.setText("0000-00-00");

        jLabel11.setFont(new java.awt.Font("Times New Roman", 0, 18)); // NOI18N
        jLabel11.setForeground(new java.awt.Color(0, 0, 0));
        jLabel11.setText("Email");

        txtEM.setBackground(new java.awt.Color(255, 255, 255));
        txtEM.setFont(new java.awt.Font("Times New Roman", 0, 18)); // NOI18N
        txtEM.setForeground(new java.awt.Color(0, 0, 0));
        txtEM.setText("@gmail.com");

        jLabel12.setFont(new java.awt.Font("Times New Roman", 0, 18)); // NOI18N
        jLabel12.setForeground(new java.awt.Color(0, 0, 0));
        jLabel12.setText("SĐT");

        txtSDT.setBackground(new java.awt.Color(255, 255, 255));
        txtSDT.setFont(new java.awt.Font("Times New Roman", 0, 18)); // NOI18N
        txtSDT.setForeground(new java.awt.Color(0, 0, 0));
        txtSDT.setText("0");
        txtSDT.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                txtSDTKeyPressed(evt);
            }
            public void keyTyped(java.awt.event.KeyEvent evt) {
                txtSDTKeyTyped(evt);
            }
        });

        jLabel13.setFont(new java.awt.Font("Times New Roman", 0, 18)); // NOI18N
        jLabel13.setForeground(new java.awt.Color(0, 0, 0));
        jLabel13.setText("Địa chỉ");

        txtDC.setBackground(new java.awt.Color(255, 255, 255));
        txtDC.setFont(new java.awt.Font("Times New Roman", 0, 18)); // NOI18N
        txtDC.setForeground(new java.awt.Color(0, 0, 0));

        jLabel14.setFont(new java.awt.Font("Times New Roman", 0, 18)); // NOI18N
        jLabel14.setForeground(new java.awt.Color(0, 0, 0));
        jLabel14.setText("Pass");

        txtMK.setBackground(new java.awt.Color(255, 255, 255));
        txtMK.setFont(new java.awt.Font("Times New Roman", 0, 18)); // NOI18N
        txtMK.setForeground(new java.awt.Color(0, 0, 0));

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(323, 323, 323)
                        .addComponent(jLabel15))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(18, 18, 18)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jPanel3, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGroup(layout.createSequentialGroup()
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(jLabel11)
                                    .addComponent(jLabel6)
                                    .addComponent(jLabel13)
                                    .addComponent(jLabel4))
                                .addGap(18, 18, 18)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                    .addComponent(txtNV, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, 267, Short.MAX_VALUE)
                                    .addComponent(txtEM)
                                    .addComponent(txtMNV)
                                    .addComponent(txtDC))
                                .addGap(23, 23, 23)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                    .addGroup(layout.createSequentialGroup()
                                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                            .addGroup(layout.createSequentialGroup()
                                                .addComponent(jLabel5)
                                                .addGap(18, 18, 18))
                                            .addGroup(layout.createSequentialGroup()
                                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                                    .addComponent(jLabel14)
                                                    .addComponent(jLabel12))
                                                .addGap(51, 51, 51)))
                                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                            .addComponent(txtNVL)
                                            .addComponent(txtSDT, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 118, javax.swing.GroupLayout.PREFERRED_SIZE)
                                            .addComponent(txtMK, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 118, javax.swing.GroupLayout.PREFERRED_SIZE)))
                                    .addGroup(layout.createSequentialGroup()
                                        .addComponent(jLabel10, javax.swing.GroupLayout.PREFERRED_SIZE, 107, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                        .addComponent(txtNS, javax.swing.GroupLayout.PREFERRED_SIZE, 118, javax.swing.GroupLayout.PREFERRED_SIZE)))))
                        .addGap(25, 25, 25)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(jPanel4, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(jButton1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(jButton2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(jButton3, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(jButton4, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(jButton5, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(18, 18, 18)
                .addComponent(jLabel15)
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jPanel3, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jPanel4, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(jButton2, javax.swing.GroupLayout.PREFERRED_SIZE, 37, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(jButton1, javax.swing.GroupLayout.PREFERRED_SIZE, 37, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(jButton3, javax.swing.GroupLayout.PREFERRED_SIZE, 37, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(jButton4, javax.swing.GroupLayout.PREFERRED_SIZE, 37, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jButton5, javax.swing.GroupLayout.PREFERRED_SIZE, 37, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel4)
                    .addComponent(txtMNV, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel5)
                    .addComponent(txtNVL, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel6)
                    .addComponent(txtNV, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(txtNS, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel10, javax.swing.GroupLayout.DEFAULT_SIZE, 33, Short.MAX_VALUE))
                .addGap(15, 15, 15)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel11)
                    .addComponent(txtEM, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(txtSDT, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel12))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(jLabel13)
                        .addComponent(txtDC, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(jLabel14)
                        .addComponent(txtMK, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap(26, Short.MAX_VALUE))
        );
    }// </editor-fold>//GEN-END:initComponents

    private void raBHActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_raBHActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_raBHActionPerformed

    private void ViewNVMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_ViewNVMouseClicked
        // TODO add your handling code here:
        txtMNV.setEditable(false);
        DefaultTableModel Df = (DefaultTableModel) ViewNV.getModel();
        int selectedIndex = ViewNV.getSelectedRow();

        txtMNV.setText(Df.getValueAt(selectedIndex, 0).toString());
        txtNV.setText(Df.getValueAt(selectedIndex, 1).toString());
        txtSDT.setText(Df.getValueAt(selectedIndex, 3).toString());
        txtNS.setText(Df.getValueAt(selectedIndex, 2).toString());
        txtDC.setText(Df.getValueAt(selectedIndex, 4).toString());
        txtEM.setText(Df.getValueAt(selectedIndex, 5).toString());
        txtNVL.setText(Df.getValueAt(selectedIndex, 6).toString());
        txtMK.setText(Df.getValueAt(selectedIndex, 8).toString());

        String maLKH = Df.getValueAt(selectedIndex, 7).toString();
        // Kiểm tra và thiết lập giá trị cho radio button tương ứng
        if (maLKH.equals("Quản lý")) {
            raQL.setSelected(true);
            raBH.setSelected(false);
            raTT.setSelected(false);
        } else if (maLKH.equals("Nhân viên bán hàng")) {
            raQL.setSelected(false);
            raBH.setSelected(true);
            raTT.setSelected(false);
        } else if (maLKH.equals("Nhân viên trực tuyến")) {
            raQL.setSelected(false);
            raBH.setSelected(false);
            raTT.setSelected(true);
        }
    }//GEN-LAST:event_ViewNVMouseClicked

    private void jButton5ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton5ActionPerformed
        // TODO add your handling code here:
        txtMNV.setEditable(true);
        txtMNV.setText("");
        txtNV.setText("");
        txtSDT.setText("");
        txtNS.setText("");
        txtDC.setText("");
        txtEM.setText("");
        txtNVL.setText("");
        txtMK.setText("");
        raQL.setSelected(false);
        raBH.setSelected(false);
        raTT.setSelected(false);
        update_table();
    }//GEN-LAST:event_jButton5ActionPerformed

    private void jButton4ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton4ActionPerformed
        // TODO add your handling code here:
        String maNV = txtMNV.getText();
        String tenNV = txtNV.getText();
        String sdt = txtSDT.getText();
        String ngaySinh = txtNS.getText();
        String diaChi = txtDC.getText();
        
        String nvl = txtNVL.getText();
        String matKhau = txtMK.getText();
        String maLoaiNV;
        
        String email = txtEM.getText();

        // Kiểm tra xem email có đúng định dạng không
        if (!isValidEmail(email)) {
            // Nếu không đúng định dạng, hiển thị thông báo cho người dùng
            JOptionPane.showMessageDialog(null, "Vui lòng nhập email đúng định dạng!", "Lỗi", JOptionPane.ERROR_MESSAGE);
            return; // Không tiếp tục thực hiện thêm nhân viên nếu email không hợp lệ
        }

        // Xác định mã loại nhân viên dựa trên radio button
        if (raQL.isSelected()) {
            maLoaiNV = "Quản lý";
        } else if (raBH.isSelected()) {
            maLoaiNV = "Nhân viên bán hàng";
        } else {
            maLoaiNV = "Nhân viên trực tuyến";
        }

        // Xác nhận với người dùng
        int xacNhan = JOptionPane.showConfirmDialog(null, "Bạn có chắc chắn muốn thêm nhân viên?", "Xác nhận Thêm", JOptionPane.YES_NO_OPTION);

        if (xacNhan == JOptionPane.YES_OPTION) {
            try {
                // Thực hiện câu truy vấn SQL để thêm nhân viên
                String query1 = "INSERT INTO NhanVien (maNV, tenNV, ngaySinh, SDT, diaChi, email, ngayVL, ChucVu) "
                        + "VALUES (?, ?, ?, ?, ?, ?, ?, ?)";
                String query2 = "INSERT INTO TaiKhoanNV (maNV, passNV) "
                        + "VALUES (?, ?)";

                PreparedStatement stmt1 = repo.getConnection().prepareStatement(query1);
                stmt1.setString(1, maNV);
                stmt1.setString(2, tenNV);
                stmt1.setString(3, ngaySinh);
                stmt1.setString(4, sdt);
                stmt1.setString(5, diaChi);
                stmt1.setString(6, email);
                stmt1.setString(7, nvl);
                stmt1.setString(8, maLoaiNV);

                PreparedStatement stmt2 = repo.getConnection().prepareStatement(query2);
                stmt2.setString(1, maNV);
                stmt2.setString(2, matKhau);

                // Thực hiện cả hai câu truy vấn
                boolean success = stmt1.executeUpdate() > 0 && stmt2.executeUpdate() > 0;

                if (success) {
                    // Cập nhật lại dữ liệu trong tableModel
                    update_table();
                    JOptionPane.showMessageDialog(null, "Đã thêm nhân viên thành công!");
                }
            } catch (SQLException e) {
                JOptionPane.showMessageDialog(null, "Lỗi khi thêm nhân viên: " + e.getMessage());
                e.printStackTrace();
            }
        }
    }//GEN-LAST:event_jButton4ActionPerformed

    private void jButton3ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton3ActionPerformed
        // TODO add your handling code here:
        String maNV = txtMNV.getText();

        // Xác nhận với người dùng
        int xacNhan = JOptionPane.showConfirmDialog(null, "Bạn có chắc chắn muốn xóa nhân viên này?", "Xác nhận Xóa", JOptionPane.YES_NO_OPTION);

        if (xacNhan == JOptionPane.YES_OPTION) {
            try {
                // Thực hiện câu truy vấn SQL để xóa bảng TaiKhoanNV trước
                String query1 = "DELETE FROM TaiKhoanNV WHERE maNV = ?";
                PreparedStatement stmt1 = repo.getConnection().prepareStatement(query1);
                stmt1.setString(1, maNV);
                int rowsDeleted1 = stmt1.executeUpdate();

                // Thực hiện câu truy vấn SQL để xóa bảng NhanVien
                String query2 = "UPDATE NhanVien SET ChucVu = 'Nhân viên nghỉ việc' WHERE maNV = ?";
                PreparedStatement stmt2 = repo.getConnection().prepareStatement(query2);
                stmt2.setString(1, maNV);
                int rowsDeleted2 = stmt2.executeUpdate();

                // Kiểm tra xem cả hai câu truy vấn đều thực hiện thành công
                boolean success = rowsDeleted1 > 0 && rowsDeleted2 > 0;

                if (success) {
                    // Cập nhật lại dữ liệu trong tableModel
                    update_table();
                    JOptionPane.showMessageDialog(null, "Đã xóa nhân viên thành công!");
                }
            } catch (SQLException e) {
                JOptionPane.showMessageDialog(null, "Lỗi khi xóa nhân viên: " + e.getMessage());
                e.printStackTrace();
            }
        }
        txtMNV.setEditable(true);
        txtMNV.setText("");
        txtNV.setText("");
        txtSDT.setText("");
        txtNS.setText("");
        txtDC.setText("");
        txtEM.setText("");
        txtNVL.setText("");
        txtMK.setText("");

    }//GEN-LAST:event_jButton3ActionPerformed

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        String maNV = txtMNV.getText();
        String tenNV = txtNV.getText();
        String sdt = txtSDT.getText();
        String ngaySinh = txtNS.getText();
        String diaChi = txtDC.getText();
        String email = txtEM.getText();

        // Kiểm tra xem email có đúng định dạng không
        if (!isValidEmail(email)) {
            // Nếu không đúng định dạng, hiển thị thông báo cho người dùng
            JOptionPane.showMessageDialog(null, "Vui lòng nhập email đúng định dạng!", "Lỗi", JOptionPane.ERROR_MESSAGE);
            return; // Không tiếp tục thực hiện thêm nhân viên nếu email không hợp lệ
        }
        String nvl = txtNVL.getText();
        String matKhau = txtMK.getText();
        String maLoaiNV;

        // Xác định mã loại nhân viên dựa trên radio button
        if (raQL.isSelected()) {
            maLoaiNV = "Quản lý";
        } else if (raBH.isSelected()) {
            maLoaiNV = "Nhân viên bán hàng";
        } else {
            maLoaiNV = "Nhân viên trực tuyến";
        }

        // Xác nhận với người dùng
        int xacNhan = JOptionPane.showConfirmDialog(null, "Bạn có chắc chắn muốn sửa thông tin nhân viên?", "Xác nhận Sửa", JOptionPane.YES_NO_OPTION);

        if (xacNhan == JOptionPane.YES_OPTION) {
            try {
                // Thực hiện câu truy vấn SQL để sửa thông tin nhân viên
                String query1 = "UPDATE NhanVien "
                        + "SET tenNV = ?, ngaySinh = ?, SDT = ?, diaChi = ?, email = ?, ngayVL = ?, ChucVu = ? "
                        + "WHERE maNV = ?";
                String query2 = "UPDATE TaiKhoanNV "
                        + "SET passNV = ? "
                        + "WHERE maNV = ?";

                PreparedStatement stmt1 = repo.getConnection().prepareStatement(query1);
                stmt1.setString(1, tenNV);
                stmt1.setString(2, ngaySinh);
                stmt1.setString(3, sdt);
                stmt1.setString(4, diaChi);
                stmt1.setString(5, email);
                stmt1.setString(6, nvl);
                stmt1.setString(7, maLoaiNV);
                stmt1.setString(8, maNV);

                PreparedStatement stmt2 = repo.getConnection().prepareStatement(query2);
                stmt2.setString(1, matKhau);
                stmt2.setString(2, maNV);

                // Thực hiện cả hai câu truy vấn
                boolean success = stmt1.executeUpdate() > 0 && stmt2.executeUpdate() > 0;

                if (success) {
                    // Cập nhật lại dữ liệu trong tableModel
                    update_table();
                    JOptionPane.showMessageDialog(null, "Đã sửa thông tin nhân viên thành công!");
                }
            } catch (SQLException e) {
                JOptionPane.showMessageDialog(null, "Lỗi khi sửa thông tin nhân viên: " + e.getMessage());
                e.printStackTrace();
            }
        }
    }//GEN-LAST:event_jButton1ActionPerformed

    private void jButton2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton2ActionPerformed
        String maNV = txtMNV.getText();

        try {
            // Thực hiện câu truy vấn SQL để tìm kiếm nhân viên theo mã nhân viên
            String query = "SELECT * FROM NhanVien WHERE maNV = ?";
            PreparedStatement stmt = repo.getConnection().prepareStatement(query);
            stmt.setString(1, maNV);

            ResultSet rs = stmt.executeQuery();

            // Xử lý kết quả truy vấn
            if (rs.next()) {
                // Tìm thấy nhân viên
                String tenNV = rs.getString("tenNV");
                String sdt = rs.getString("sdt");
                String ngaySinh = rs.getString("ngaySinh");
                String diaChi = rs.getString("diaChi");
                String email = rs.getString("email");
                String nvl = rs.getString("ngayVL");
                String maLoaiNV = rs.getString("ChucVu");

                // Hiển thị thông tin nhân viên
                txtNV.setText(tenNV);
                txtSDT.setText(sdt);
                txtNS.setText(ngaySinh);
                txtDC.setText(diaChi);
                txtEM.setText(email);
                txtNVL.setText(nvl);

                // Hiển thị chức vụ
                if (maLoaiNV.equals("Quản lý")) {
                    raQL.setSelected(true);
                } else if (maLoaiNV.equals("Nhân viên bán hàng")) {
                    raBH.setSelected(true);
                } else {
                    raTT.setSelected(true);
                }
            } else {
                // Không tìm thấy nhân viên
                JOptionPane.showMessageDialog(null, "Không tìm thấy nhân viên với mã này.");
            }
        } catch (SQLException e) {
            JOptionPane.showMessageDialog(null, "Lỗi khi tìm kiếm nhân viên: " + e.getMessage());
            e.printStackTrace();
        }
    }//GEN-LAST:event_jButton2ActionPerformed

    private void txtSDTKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtSDTKeyPressed
        // TODO add your handling code here:
        if (evt.getKeyCode() == KeyEvent.VK_BACK_SPACE || evt.getKeyCode() == KeyEvent.VK_DELETE) {
            // Allow backspace and delete keys
            return;
        }

        char c = evt.getKeyChar();
        if (!Character.isDigit(c)) {
            getToolkit().beep();
            evt.consume();
        }

    }//GEN-LAST:event_txtSDTKeyPressed

    private void txtSDTKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtSDTKeyTyped
        // TODO add your handling code here:
        char c = evt.getKeyChar();
        int length = txtSDT.getText().length();

        if (length == 0 && c != '0') {
            getToolkit().beep();
            evt.consume();
            return;
        }

        if (!Character.isDigit(c) || length >= 10) {
            getToolkit().beep();
            evt.consume();
        }
    }//GEN-LAST:event_txtSDTKeyTyped


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JTable ViewNV;
    private javax.swing.JButton jButton1;
    private javax.swing.JButton jButton2;
    private javax.swing.JButton jButton3;
    private javax.swing.JButton jButton4;
    private javax.swing.JButton jButton5;
    private javax.swing.JLabel jLabel10;
    private javax.swing.JLabel jLabel11;
    private javax.swing.JLabel jLabel12;
    private javax.swing.JLabel jLabel13;
    private javax.swing.JLabel jLabel14;
    private javax.swing.JLabel jLabel15;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JPanel jPanel3;
    private javax.swing.JPanel jPanel4;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JRadioButton raBH;
    private javax.swing.JRadioButton raQL;
    private javax.swing.JRadioButton raTT;
    private javax.swing.JTextField txtDC;
    private javax.swing.JTextField txtEM;
    private javax.swing.JTextField txtMK;
    private javax.swing.JTextField txtMNV;
    private javax.swing.JTextField txtNS;
    private javax.swing.JTextField txtNV;
    private javax.swing.JTextField txtNVL;
    private javax.swing.JTextField txtSDT;
    // End of variables declaration//GEN-END:variables
}
